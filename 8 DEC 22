public:
    int n = 1e6;
    vector<int> threeDivisors(vector<long long> query, int q)
    {
        // Write your code here
        
        bool prime[n + 1];
        memset(prime, true, sizeof(prime));
     
        for (int p = 2; p * p <= n; p++) {
            
            if (prime[p] == true) {
                for (int i = p * p; i <= n; i += p)
                    prime[i] = false;
            }
        }
        prime[1] = false;
        int prev[n+1], cnt = 0;
        for(int i = 1; i <= n; i++)
        {
            if(prime[i]) cnt++;
            
            prev[i] = cnt;
        }
        vector<int> ans;
        for(int i = 0; i < q; i++)
        {
            int temp = (int)sqrt(query[i]);
            ans.push_back(prev[temp]);
        }
        return ans;
    }
